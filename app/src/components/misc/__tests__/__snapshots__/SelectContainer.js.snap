// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectContainer renders correctly with none selected 1`] = `
<div
  className="component"
>
  <p>
    Velg komiteene du ønsker å søke ved å klikke på dem.
  </p>
  <div
    className="selectables"
  >
    <Selectable
      committee={
        Object {
          "icon": "MockIcon",
          "info": "Default info",
          "key": "test0kom",
          "name": "Test0kom",
        }
      }
      onClick={[Function]}
      selected={false}
      small={false}
    />
    <Selectable
      committee={
        Object {
          "icon": "MockIcon",
          "info": "Default info",
          "key": "test1kom",
          "name": "Test1kom",
        }
      }
      onClick={[Function]}
      selected={false}
      small={false}
    />
    <Selectable
      committee={
        Object {
          "icon": "MockIcon",
          "info": "Default info",
          "key": "test2kom",
          "name": "Test2kom",
        }
      }
      onClick={[Function]}
      selected={false}
      small={false}
    />
    <Selectable
      committee={
        Object {
          "icon": "MockIcon",
          "info": "Default info",
          "key": "test3kom",
          "name": "Test3kom",
        }
      }
      onClick={[Function]}
      selected={false}
      small={false}
    />
  </div>
  <div
    className="prioritizedSwitch"
  >
    <ToggleSwitch
      checked={false}
    />
    <span>
      Prioritert rekkefølge?
    </span>
  </div>
  <div
    className="selectedList"
  >
    <sortableList(SelectedList)
      axis="y"
      committees={Array []}
      disabled={true}
      distance={0}
      getHelperDimensions={[Function]}
      hideSortableGhost={true}
      lockOffset="50%"
      lockToContainerEdges={false}
      onSortEnd={[Function]}
      pressDelay={0}
      pressThreshold={5}
      shouldCancelStart={[Function]}
      totalChoices={3}
      transitionDuration={300}
      useWindowAsScrollContainer={false}
    />
  </div>
</div>
`;

exports[`SelectContainer renders correctly with one selected 1`] = `
<div
  className="component"
>
  <p>
    Velg komiteene du ønsker å søke ved å klikke på dem.
  </p>
  <div
    className="selectables"
  >
    <Selectable
      committee={
        Object {
          "icon": "MockIcon",
          "info": "Default info",
          "key": "test0kom",
          "name": "Test0kom",
        }
      }
      onClick={[Function]}
      selected={false}
      small={false}
    />
    <Selectable
      committee={
        Object {
          "icon": "MockIcon",
          "info": "Default info",
          "key": "test1kom",
          "name": "Test1kom",
        }
      }
      onClick={[Function]}
      selected={true}
      small={false}
    />
    <Selectable
      committee={
        Object {
          "icon": "MockIcon",
          "info": "Default info",
          "key": "test2kom",
          "name": "Test2kom",
        }
      }
      onClick={[Function]}
      selected={false}
      small={false}
    />
    <Selectable
      committee={
        Object {
          "icon": "MockIcon",
          "info": "Default info",
          "key": "test3kom",
          "name": "Test3kom",
        }
      }
      onClick={[Function]}
      selected={false}
      small={false}
    />
  </div>
  <div
    className="prioritizedSwitch"
  >
    <ToggleSwitch
      checked={false}
    />
    <span>
      Prioritert rekkefølge?
    </span>
  </div>
  <div
    className="selectedList"
  >
    <sortableList(SelectedList)
      axis="y"
      committees={
        Array [
          Object {
            "icon": "MockIcon",
            "info": "Default info",
            "key": "test1kom",
            "name": "Test1kom",
          },
        ]
      }
      disabled={true}
      distance={0}
      getHelperDimensions={[Function]}
      hideSortableGhost={true}
      lockOffset="50%"
      lockToContainerEdges={false}
      onSortEnd={[Function]}
      pressDelay={0}
      pressThreshold={5}
      shouldCancelStart={[Function]}
      totalChoices={3}
      transitionDuration={300}
      useWindowAsScrollContainer={false}
    />
  </div>
</div>
`;

exports[`SelectContainer renders correctly with two selected 1`] = `
<div
  className="component"
>
  <p>
    Velg komiteene du ønsker å søke ved å klikke på dem.
  </p>
  <div
    className="selectables"
  >
    <Selectable
      committee={
        Object {
          "icon": "MockIcon",
          "info": "Default info",
          "key": "test0kom",
          "name": "Test0kom",
        }
      }
      onClick={[Function]}
      selected={false}
      small={false}
    />
    <Selectable
      committee={
        Object {
          "icon": "MockIcon",
          "info": "Default info",
          "key": "test1kom",
          "name": "Test1kom",
        }
      }
      onClick={[Function]}
      selected={true}
      small={false}
    />
    <Selectable
      committee={
        Object {
          "icon": "MockIcon",
          "info": "Default info",
          "key": "test2kom",
          "name": "Test2kom",
        }
      }
      onClick={[Function]}
      selected={true}
      small={false}
    />
    <Selectable
      committee={
        Object {
          "icon": "MockIcon",
          "info": "Default info",
          "key": "test3kom",
          "name": "Test3kom",
        }
      }
      onClick={[Function]}
      selected={false}
      small={false}
    />
  </div>
  <div
    className="prioritizedSwitch"
  >
    <ToggleSwitch
      checked={false}
    />
    <span>
      Prioritert rekkefølge?
    </span>
  </div>
  <div
    className="selectedList"
  >
    <sortableList(SelectedList)
      axis="y"
      committees={
        Array [
          Object {
            "icon": "MockIcon",
            "info": "Default info",
            "key": "test2kom",
            "name": "Test2kom",
          },
          Object {
            "icon": "MockIcon",
            "info": "Default info",
            "key": "test1kom",
            "name": "Test1kom",
          },
        ]
      }
      disabled={true}
      distance={0}
      getHelperDimensions={[Function]}
      hideSortableGhost={true}
      lockOffset="50%"
      lockToContainerEdges={false}
      onSortEnd={[Function]}
      pressDelay={0}
      pressThreshold={5}
      shouldCancelStart={[Function]}
      totalChoices={3}
      transitionDuration={300}
      useWindowAsScrollContainer={false}
    />
  </div>
</div>
`;
